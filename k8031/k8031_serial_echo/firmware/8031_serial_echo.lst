                   ; File: 8031_serial_echo.asm
                   ; Title: Serial Echo Program with PAULMON2 autobaud detectio
                   ; Author: kayto@github.com
                   ; Date: December 02, 2024
                   ; Version: 1.0
                   ; 
                   ; Based on PAULMON2 by Paul Stoffregen
                   ; Minimal implementation for Serial Echo
                   ;
0000:              .org    0x0000          ; Start at address 0x0000
0000: 02 01 00     ljmp    start           ; Jump to main program
                   
0030:              .org    0x0030          ; cout
0030: 30 99 FD     cout:   jnb     ti, cout        ; Wait for transmit buffer e
0033: C2 99                clr     ti              ; Clear transmit flag
0035: F5 99                mov     sbuf, a         ; Send character
0037: 22                   ret
                   
0038:              .org    0x0038          ; Input routine 
0038: 30 98 FD     cin:    jnb     ri, cin         ; Wait for receive buffer fu
003B: C2 98                clr     ri              ; Clear receive flag
003D: E5 99                mov     a, sbuf         ; Get character
003F: 22                   ret
                   
0042:              .org    0x0042          ; autobaud
                   autobaud:
0042: 75 87 80             mov     pcon, #0x80     ; Configure UART, fast baud
0045: 75 89 21             mov     tmod, #0x21     ; Timer 1, mode 2 (8-bit aut
0048: 75 8D FF             mov     th1, #0xFF      ; Initial baud rate
004B: 75 8B FF             mov     tl1, #0xFF      ; Start ASAP
004E: 75 98 52             mov     scon, #0x52     ; Mode 1, receive enable
0051: D2 9C                setb    ren             ; Enable serial receive
0053: D2 8E                setb    tr1             ; Start timer 1
0055: 22                   ret
                   
0100:              .org    0x0100          ; Main program start
                   start:  
0100: 11 42                acall   autobaud        ; Initialize serial port
                           
                   echo_loop:               
0102: 11 38                acall   cin             ; Wait for character
0104: 11 30                acall   cout            ; Echo it back
0106: 80 FA                sjmp    echo_loop       ; Loop forever

VACS 2650 Cross Assembler V1.24j/w32                                           Page 1

0000              ;2650 Microprocessor
0000              ;
0000              ;Example 3 - full duplex bit by bit echo, 2400 baud
0000              ;8 data bits no parity 1 stop bit
0000              ;
0000              ;modified by AdamT117 (kayto@github)to get the timing
0000              ;for Teensy 3.6 120MHZ working
0000              ;
0000              ;Original code from Philips Applcation memo
0000              ;2650 INPUT/OUTPUT STRUCTURES AND INTERFACES MP54 
0000              ;
0000              ;compile with VACS
0000              ;
0000              ;2650 specific equates
0000 = 00000001   car         equ $01 
0000 = 00000080   sense       equ $80     ;sense bit in program status, upper
0000 = 00000040   flag        equ $40     ;flag bit in program status, upper
0000 = 00000020   ii          equ $20     ;interrupt inhibit bit in program stat
0000 = 00000010   rs          equ $10     ;register select bit in program status
0000 = 00000008   wc          equ $08     ;with/without carry bit in program sta
0000 = 00000004   ovf         equ $04     ;overflow
0000 = 00000020   idc         equ $20     ;inter digit carry
0000 = 00000002   N           equ 2       ;branch condition negative
0000 = 00000003   un          equ 3       ;unconditional
0000              ;Number of data bits
0000 = 00000008   DB8         equ $08     ;character has 8 data bits
0000 = 00000080   BP8         equ $80
0000              ;routine tested with teensy 3.6 - compile at 120MHZ
0000              ;Bit delays
0000 = 00000020   BR24        equ $20     ;setting for teensy that works.
0000                                      ;the actual delay was a lot of trial a
0000                                      ;refer to bdlay
0000              ;Start bit sample delays 
0000 = 000000A5   SD01        equ $A5
0000 = 00000005   SD24        equ $05
0000              ;
0000              ;*********************************************************
0000                          org $0000
0000 7640         strt:   ppsu    flag    ;set flag to switch off the line
0002 7525                 cpsl    ovf+car+idc
0004 12           test:   spsu            ;wait for start bit
0005 1A7D                 bctr,N  test
0007 0603                 lodi,r2 $03     ;set r2 to number of samples
0009              samp:   ;lodi,r1 SD24   ;set r1 to sample delay
0009                      ;bdrr,r1 $
0009 3B18                 bstr,un dly
000B 12                   spsu            ;test for start bit validity
000C 1A76                 bctr,N test     ;if not valid go back to test
000E FA79                 bdrr,r2 samp
0010 0608                 lodi,r2 DB8     ;set r2 to number of data bits
0012 7440                 cpsu flag       ;generate start bit
0014 51           bits:   rrr,r1
0015 3B10                 bstr,un bdly    ;go to delay and echo routine
0017 FA7B                 bdrr,r2 bits    ;test for number of data bits
0019 01                   lodz    r1
001A C2                   strz    r2      ;load r2 with character
001B 0700         stop:   lodi,r3 0       ;clear r3
001D 3B08                 bstr,un bdly
001F 16           exi1:   retc,N          ;test stop bit level
0020 7720                 ppsl idc        ;if wrong set idc bit
VACS 2650 Cross Assembler V1.24j/w32                                           Page 2

0022 17           exi2:   retc,un
0023              ;
0023              ;***************************************************
0023              ;     
0023              ; bit delay and echo subroutine
0023 0505         dly:    lodi,r1 SD24    ;set r1 to sample delay
0025 F97E                 bdrr,r1 $
0027              ;YMMV - adding or removing nops helps if you are having proble
0027 20           bdly:   eorz    r0
0028 0420                 lodi,r0 BR24    ;set r0 to bit delay
002A F87E                 bdrr,r0 $
002C C0                   nop
002D C0                   nop
002E C0                   nop
002F 12                   spsu            ;test data bit level
0030 1A04                 bctr,N one
0032 7440                 cpsu    flag    ;if low, echo a zero
0034 1B04                 bctr,un bit1
0036 7640         one:    ppsu    flag    ;if high echo a one
0038 6580                 iori,r1 BP8     ;insert data bit into r1
003A C3           bit1:   strz    r3
003B 3B4C                 bstr,un samp    ;ok done back to samp
003D                      ;retc,un
003D              ;
003D > 0000               end
VACS 2650 Cross Assembler V1.24j/w32                                           Page 3
List of Identifiers

%serial-echo (default) . . . . . = Section  0000-003C (Byte)
BDLY . . . . . . . . . . . . . . = Value    00000027
BIT1 . . . . . . . . . . . . . . = Value    0000003A
BITS . . . . . . . . . . . . . . = Value    00000014
BP8. . . . . . . . . . . . . . . = Value    00000080
BR24 . . . . . . . . . . . . . . = Value    00000020
CAR. . . . . . . . . . . . . . . = Value    00000001
DB8. . . . . . . . . . . . . . . = Value    00000008
DLY. . . . . . . . . . . . . . . = Value    00000023
EXI1 . . . . . . . . . . . . . . = Value    0000001F (not used)
EXI2 . . . . . . . . . . . . . . = Value    00000022 (not used)
FLAG . . . . . . . . . . . . . . = Value    00000040
IDC. . . . . . . . . . . . . . . = Value    00000020
II . . . . . . . . . . . . . . . = Value    00000020 (not used)
N. . . . . . . . . . . . . . . . = Value    00000002
ONE. . . . . . . . . . . . . . . = Value    00000036
OVF. . . . . . . . . . . . . . . = Value    00000004
RS . . . . . . . . . . . . . . . = Value    00000010 (not used)
SAMP . . . . . . . . . . . . . . = Value    00000009
SD01 . . . . . . . . . . . . . . = Value    000000A5 (not used)
SD24 . . . . . . . . . . . . . . = Value    00000005
SENSE. . . . . . . . . . . . . . = Value    00000080 (not used)
STOP . . . . . . . . . . . . . . = Value    0000001B (not used)
STRT . . . . . . . . . . . . . . = Value    00000000 (not used)
TEST . . . . . . . . . . . . . . = Value    00000004
UN . . . . . . . . . . . . . . . = Value    00000003
WC . . . . . . . . . . . . . . . = Value    00000008 (not used)

Module Name:     *NONAME*
Module Checksum: 00001271

Tuesday, February 25, 2025  14:09:06

          86 Source Lines      86 Assembled Lines 
                >>>>   No Assembly Errors Detected.   <<<<
